#include <iostream>
using namespace std;
struct ListNode {
      int val;
      ListNode *next;
      ListNode() : val(0), next(nullptr) {}
      ListNode(int x) : val(x), next(nullptr) {}
      ListNode(int x, ListNode *next) : val(x), next(next) {}
  };
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) 
    {
      int div, mod, num = 0 ;
      ListNode *head = nullptr, *tmp, *prev;
      do{
        cout << "Here This error" << endl;
        num = (l1)? l1->val: 0 + (l2)?l2->val : 0 + (mod)? mod : 0;
        if(num <= 10)
            div = num / 10, mod = num % 10;
        else div = num, mod = 0;
        prev = new ListNode(div, nullptr);
        if(!head)
            tmp = head = prev;
        else {tmp->next = prev, tmp = prev;}
        if (l1) l1 = l1->next;
        if (l2) l2 = l2->next;
      }while(mod != 0 || l1 || l2);
      return head;
    }
};

int main(void)
{
  ListNode *third = new ListNode(2);
  ListNode *second = new ListNode(4, third);
  ListNode *first = new ListNode(3, second);
  ListNode *l2 = new ListNode(5);
  ListNode *s = new ListNode(6, l2);
  ListNode *l= new ListNode(4, s);

  Solution obj ; 
  ListNode *result = obj.addTwoNumbers(third, l2);
  while(result)
        cout << result->val <<" "<< endl, result = result->next;
}
